syntax = "proto3";

package api;

option go_package = "brainiac/gen/api;api";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

enum EnvironmentMode {
  ENVIRONMENT_MODE_UNSPECIFIED = 0;
  ENVIRONMENT_MODE_TEST = 1;
  ENVIRONMENT_MODE_HYBRID = 2;
  ENVIRONMENT_MODE_REAL = 3;
}

message PipelineNode {
  string id = 1;
  string key = 2;
  string label = 3;
  string category = 4;
  string status = 5;
  string type = 6;
  double position_x = 7;
  double position_y = 8;
  string config_json = 9;
}

message PipelineEdge {
  string id = 1;
  string source = 2;
  string target = 3;
  string label = 4;
}

message GetPipelineGraphRequest {
  string project_id = 1;
  string pipeline_id = 2;
  EnvironmentMode mode = 3;
}

message GetPipelineGraphResponse {
  repeated PipelineNode nodes = 1;
  repeated PipelineEdge edges = 2;
}

message CreatePipelineNodeRequest {
  string project_id = 1;
  string pipeline_id = 2;
  string label = 3;
  string type = 4;
  string category = 5;
  string status = 6;
  double position_x = 7;
  double position_y = 8;
  string config_json = 9;
}

message UpdatePipelineNodeRequest {
  string project_id = 1;
  string pipeline_id = 2;
  string node_id = 3;
  string label = 4;
  string type = 5;
  string category = 6;
  string status = 7;
  double position_x = 8;
  double position_y = 9;
  string config_json = 10;
}

message DeletePipelineNodeRequest {
  string project_id = 1;
  string pipeline_id = 2;
  string node_id = 3;
}

message CreatePipelineEdgeRequest {
  string project_id = 1;
  string pipeline_id = 2;
  string source = 3;
  string target = 4;
  string label = 5;
}

message DeletePipelineEdgeRequest {
  string project_id = 1;
  string pipeline_id = 2;
  string edge_id = 3;
}

message ProjectSummary {
  string id = 1;
  string name = 2;
  string description = 3;
}

message PipelineSummary {
  string id = 1;
  string name = 2;
  string description = 3;
  int32 version = 4;
}

message ListProjectsResponse {
  repeated ProjectSummary projects = 1;
}

message ListPipelinesRequest {
  string project_id = 1;
}

message ListPipelinesResponse {
  repeated PipelineSummary pipelines = 1;
}

message PublishPipelineVersionRequest {
  string project_id = 1;
  string pipeline_id = 2;
  string notes = 3;
}

message PublishPipelineVersionResponse {
  string version_id = 1;
  int32 version_number = 2;
}

message ExecutePipelineRequest {
  string project_id = 1;
  string pipeline_id = 2;
  EnvironmentMode mode = 3;
}

message NodeExecutionResult {
  string node_id = 1;
  string status = 2;
  string output = 3;
}

message ExecutePipelineResponse {
  repeated NodeExecutionResult results = 1;
}

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/hello"
      body: "*"
    };
  }
}

service AgentGraphService {
  rpc GetPipelineGraph (GetPipelineGraphRequest) returns (GetPipelineGraphResponse) {
    option (google.api.http) = {
      get: "/v1/projects/{project_id}/pipelines/{pipeline_id}/graph"
      additional_bindings {
        get: "/v1/pipelines/{pipeline_id}/graph"
      }
    };
  }
  rpc CreatePipelineNode (CreatePipelineNodeRequest) returns (PipelineNode) {
    option (google.api.http) = {
      post: "/v1/projects/{project_id}/pipelines/{pipeline_id}/nodes"
      body: "*"
    };
  }
  rpc UpdatePipelineNode (UpdatePipelineNodeRequest) returns (PipelineNode) {
    option (google.api.http) = {
      patch: "/v1/projects/{project_id}/pipelines/{pipeline_id}/nodes/{node_id}"
      body: "*"
    };
  }
  rpc DeletePipelineNode (DeletePipelineNodeRequest) returns (.google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/projects/{project_id}/pipelines/{pipeline_id}/nodes/{node_id}"
    };
  }
  rpc CreatePipelineEdge (CreatePipelineEdgeRequest) returns (PipelineEdge) {
    option (google.api.http) = {
      post: "/v1/projects/{project_id}/pipelines/{pipeline_id}/edges"
      body: "*"
    };
  }
  rpc DeletePipelineEdge (DeletePipelineEdgeRequest) returns (.google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/projects/{project_id}/pipelines/{pipeline_id}/edges/{edge_id}"
    };
  }
  rpc ListProjects (.google.protobuf.Empty) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get: "/v1/projects"
    };
  }
  rpc ListPipelines (ListPipelinesRequest) returns (ListPipelinesResponse) {
    option (google.api.http) = {
      get: "/v1/projects/{project_id}/pipelines"
    };
  }
  rpc PublishPipelineVersion (PublishPipelineVersionRequest) returns (PublishPipelineVersionResponse) {
    option (google.api.http) = {
      post: "/v1/projects/{project_id}/pipelines/{pipeline_id}/versions:publish"
      body: "*"
    };
  }
  rpc ExecutePipeline (ExecutePipelineRequest) returns (ExecutePipelineResponse) {
    option (google.api.http) = {
      post: "/v1/projects/{project_id}/pipelines/{pipeline_id}:execute"
      body: "*"
    };
  }
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}